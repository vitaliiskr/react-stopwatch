{"version":3,"sources":["logo.svg","Stopwatch/Stopwatch.jsx","App.js","reportWebVitals.js","index.js"],"names":["Stopwatch","useState","isTimerStarted","setIsTimerStarted","timerId","setTimerId","seconds","setSeconds","minutes","setMinutes","hours","setHours","clickCount","setCount","reset","stop","clearInterval","useEffect","prevMinutes","prevHours","className","type","onClick","setInterval","prevSeconds","disabled","prevcount","setTimeout","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAAe,I,2BCuHAA,EAnHG,WAAO,IAAD,EACsBC,oBAAS,GAD/B,mBACfC,EADe,KACCC,EADD,OAEQF,mBAAS,MAFjB,mBAEfG,EAFe,KAENC,EAFM,OAGQJ,mBAAS,GAHjB,mBAGfK,EAHe,KAGNC,EAHM,OAIQN,mBAAS,GAJjB,mBAIfO,EAJe,KAINC,EAJM,OAKIR,mBAAS,GALb,mBAKfS,EALe,KAKRC,EALQ,OAMSV,mBAAS,GANlB,mBAMfW,EANe,KAMHC,EANG,KAyBhBC,EAAQ,WACZP,EAAW,GACXE,EAAW,GACXE,EAAS,IAGLI,EAAO,WACXZ,GAAkB,GAClBE,EAAWW,cAAcZ,IACzBU,KA4BF,OAdAG,qBAAU,WACQ,KAAZX,IACFG,GAAW,SAACS,GAAD,OAAiBA,EAAc,KAC1CX,EAAW,IAEG,KAAZC,IACFG,GAAS,SAACQ,GAAD,OAAeA,EAAY,KACpCV,EAAW,IAEC,KAAVC,GACFK,MAED,CAACT,EAASE,EAASE,IAGpB,sBAAKU,UAAU,YAAf,UAEE,sBAAKA,UAAU,oBAAf,UACE,qBAAKA,UAAU,kBAAf,SACGV,EAAQ,GAAR,WAAiBA,GAAUA,IAE9B,qBAAKU,UAAU,oBAAf,eACA,qBAAKA,UAAU,kBAAf,SACGZ,EAAU,GAAV,WAAmBA,GAAYA,IAElC,qBAAKY,UAAU,oBAAf,eACA,qBAAKA,UAAU,kBAAf,SACGd,EAAU,GAAV,WAAmBA,GAAYA,OAIpC,sBAAKc,UAAU,qBAAf,UACE,wBACEC,KAAK,SACLD,UAAU,oBACVE,QAzEM,WACZnB,GAAkB,GAClBE,EAAWkB,aAAY,WACrBhB,GAAW,SAACiB,GAAD,OAAiBA,EAAc,OACzC,OAsEGC,SAAUvB,EAJZ,mBAQA,wBACEmB,KAAK,SACLD,UAAU,oBACVE,QAtDW,WACjBT,GAAS,SAACa,GAAD,OAAeA,EAAY,KACjB,IAAfd,GAlBJT,GAAkB,GAClBE,EAAWW,cAAcZ,KAoBvBuB,YAAW,WACTd,EAAS,KACR,MA4CD,kBAOA,wBACEQ,KAAK,SACLD,UAAU,oBACVE,QAASP,EAHX,kBAOA,wBACEM,KAAK,SACLD,UAAU,oBACVE,QAASR,EAHX,0BC7FOc,MARf,WACE,OACE,sBAAKR,UAAU,MAAf,UACE,2CACA,cAAC,EAAD,QCGSS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.07e809aa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useEffect, useState } from 'react';\nimport './Stopwatch.scss';\n// import { interval } from 'rxjs';\n\nconst Stopwatch = () => {\n  const [isTimerStarted, setIsTimerStarted] = useState(false);\n  const [timerId, setTimerId] = useState(null);\n  const [seconds, setSeconds] = useState(0);\n  const [minutes, setMinutes] = useState(0);\n  const [hours, setHours] = useState(0);\n  const [clickCount, setCount] = useState(0);\n\n  // const subscription = interval(1000);\n\n  const start = () => {\n    setIsTimerStarted(true);\n    setTimerId(setInterval(() => {\n      setSeconds((prevSeconds) => prevSeconds + 1);\n    }, 1000));\n    // subscription.subscribe(() => {\n    //   setSeconds((prevSeconds) => prevSeconds + 1);\n    // });\n  };\n\n  const wait = () => {\n    setIsTimerStarted(false);\n    setTimerId(clearInterval(timerId));\n  };\n\n  const reset = () => {\n    setSeconds(0);\n    setMinutes(0);\n    setHours(0);\n  };\n\n  const stop = () => {\n    setIsTimerStarted(false);\n    setTimerId(clearInterval(timerId));\n    reset();\n  };\n\n  const startCount = () => {\n    setCount((prevcount) => prevcount + 1);\n    if (clickCount === 1) {\n      wait();\n    } else {\n      setTimeout(() => {\n        setCount(0);\n      }, 300);\n    }\n  };\n\n  useEffect(() => {\n    if (seconds === 60) {\n      setMinutes((prevMinutes) => prevMinutes + 1);\n      setSeconds(0);\n    }\n    if (minutes === 60) {\n      setHours((prevHours) => prevHours + 1);\n      setMinutes(0);\n    }\n    if (hours === 24) {\n      stop();\n    }\n  }, [seconds, minutes, hours]);\n\n  return (\n    <div className=\"stopwatch\">\n\n      <div className=\"stopwatch__screen\">\n        <div className=\"stopwatch__item\">\n          {hours < 10 ? `0${hours}` : hours}\n        </div>\n        <div className=\"stopwatch__border\">:</div>\n        <div className=\"stopwatch__item\">\n          {minutes < 10 ? `0${minutes}` : minutes}\n        </div>\n        <div className=\"stopwatch__border\">:</div>\n        <div className=\"stopwatch__item\">\n          {seconds < 10 ? `0${seconds}` : seconds}\n        </div>\n      </div>\n\n      <div className=\"stopwatch__buttons\">\n        <button\n          type=\"button\"\n          className=\"stopwatch__button\"\n          onClick={start}\n          disabled={isTimerStarted}\n        >\n          Start\n        </button>\n        <button\n          type=\"button\"\n          className=\"stopwatch__button\"\n          onClick={startCount}\n        >\n          Wait\n        </button>\n        <button\n          type=\"button\"\n          className=\"stopwatch__button\"\n          onClick={stop}\n        >\n          Stop\n        </button>\n        <button\n          type=\"button\"\n          className=\"stopwatch__button\"\n          onClick={reset}\n        >\n          Reset\n        </button>\n      </div>\n\n    </div>\n  );\n};\n\nexport default Stopwatch;\n","import logo from './logo.svg';\nimport './App.scss';\n\nimport Stopwatch from './Stopwatch/Stopwatch';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h2>Stopwatch</h2>\n      <Stopwatch />\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}